#spring.data.mongodb.uri=mongodb://admin:admin@ds157187.mlab.com:57187
spring.datasource.driver-class-name = org.postgresql.Driver
spring.datasource.url = jdbc:postgresql://localhost:5432/spring

# Username and password
spring.datasource.username = postgres
spring.datasource.password = test

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.dbcp.test-while-idle= true
spring.datasource.dbcp.validation-query= SELECT 1

server.error.whitelabel.enabled=false



# ===============================
# = JPA / HIBERNATE
# ===============================

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).

# Show or not log for each sql query
#spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
spring.jpa.hibernate.ddl-auto = update

# Naming strategy
spring.jpa.hibernate.naming.strategy= org.hibernate.cfg.ImprovedNamingStrategy

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect

spring.mvc.throw-exception-if-no-handler-found=true
spring.resources.add-mappings=false

#spring.mvc.view.prefix: /WEB-INF/template/
#spring.mvc.view.suffix: .jsp

welcome.message: Hello Mkyong

 
logging.level.root=WARN
logging.level.org.springframework.web=INFO
logging.level.org.hibernate=ERROR
logging.level.com.howtoprogram=DEBUG



